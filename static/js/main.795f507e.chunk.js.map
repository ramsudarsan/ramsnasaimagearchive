{"version":3,"sources":["components/Header/Header.js","components/Welcome/Welcome.js","components/Search/Search.js","components/ResultCard/ResultCard.js","components/Results/Results.js","components/CardModal/CardModal.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Welcome","Link","to","style","color","fontSize","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSearch","e","setState","defineProperty","target","name","value","submitForm","preventDefault","history","push","concat","state","q","center","location","year_start","year_end","_this$state","page","getImages","showHide","hidden","buttonText","_queryString$parse","queryString","parse","search","start","end","onSubmit","type","placeholder","onChange","htmlFor","onClick","Component","ResultCard","image","title","descriptionChars","description","_this2","length","substring","fetch","then","response","json","data","_this3","undefined","includes","showInfo","date","src","Results","_ref","results","hasNext","hasPrev","getNext","getPrev","map","result","i","components_ResultCard_ResultCard","key","href","date_created","CardModal","show","exitModal","window","open","App","getPrevImages","newPage","currPage","getNextImages","checkq","checkcenter","checklocation","checkstart","checkend","checkpage","getpage","collection","links","rel","items","catch","showCardModal","console","log","modalImage","showModal","modalTitle","modalDescription","modalCenter","modalDate","BrowserRouter","basename","process","components_CardModal_CardModal","components_Header_Header","Route","path","exact","strict","component","render","components_Search_Search","assign","components_Results_Results","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4YAaeA,eAVA,WACX,OACQC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,SAAJ,mCCoBLC,SAvBC,WACZ,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,uTAGAF,EAAAC,EAAAC,cAAA,sMAGAF,EAAAC,EAAAC,cAAA,6JACAF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAoBH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,UAAUC,MAAO,CAAEC,MAAO,UAAWC,SAAU,KAAxD,yCCsEpCC,qBArFX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAkBVQ,aAAe,SAACC,GACZR,EAAKS,SAALR,OAAAS,EAAA,EAAAT,CAAA,GACKO,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SArBfb,EAyBnBc,WAAa,SAACN,GACVA,EAAEO,iBACFf,EAAKD,MAAMiB,QAAQC,KAAnB,aAAAC,OAAqClB,EAAKmB,MAAMC,EAAhD,YAAAF,OAA4DlB,EAAKmB,MAAME,OAAvE,cAAAH,OAA0FlB,EAAKmB,MAAMG,SAArG,WAAAJ,OAAuHlB,EAAKmB,MAAMI,WAAlI,SAAAL,OAAoJlB,EAAKmB,MAAMK,SAA/J,WAFgB,IAAAC,EAG4CzB,EAAKmB,MAAzDC,EAHQK,EAGRL,EAAGC,EAHKI,EAGLJ,OAAQC,EAHHG,EAGGH,SAAUC,EAHbE,EAGaF,WAAYC,EAHzBC,EAGyBD,SAAUE,EAHnCD,EAGmCC,KACnD1B,EAAKD,MAAM4B,UAAUP,EAAGC,EAAQC,EAAUC,EAAYC,EAAUE,IA7BjD1B,EAgCnB4B,SAAW,SAACpB,GACRA,EAAEO,iBACwB,KAAtBf,EAAKmB,MAAMU,OACX7B,EAAKS,SAAS,CACVoB,OAAQ,SACRC,WAAY,kBAGhB9B,EAAKS,SAAS,CACVoB,OAAQ,GACRC,WAAY,UAxCpB9B,EAAKmB,MAAQ,CACTC,EAAG,GACHC,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVE,KAAM,GACNG,OAAQ,SACRC,WAAY,iBAVD9B,mFAcC,IAAA+B,EACkCC,IAAYC,MAAM9B,KAAKJ,MAAMuB,SAASY,QAAhFd,EADQW,EACRX,EAAGC,EADKU,EACLV,OAAQC,EADHS,EACGT,SAAUa,EADbJ,EACaI,MAAOC,EADpBL,EACoBK,IAAKV,EADzBK,EACyBL,KACzCvB,KAAKJ,MAAM4B,UAAUP,EAAGC,EAAQC,EAAUa,EAAOC,EAAKV,oCAgCtD,OACItC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,QAAM+C,SAAUlC,KAAKW,YACjB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAS+C,KAAK,OAAO1B,KAAK,IAAI2B,YAAY,cAAcC,SAAUrC,KAAKI,eACxFnB,EAAAC,EAAAC,cAAA,SAAOmD,QAAQ,KAAf,gBAEJrD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAA8BmD,QAASvC,KAAKyB,UAAWzB,KAAKgB,MAAMW,aAExF1C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,0BAA4BY,KAAKgB,MAAMU,QACnDzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqB,KAAK,SAAS0B,KAAK,OAAOC,YAAY,SAASC,SAAUrC,KAAKI,eACxFnB,EAAAC,EAAAC,cAAA,SAAOmD,QAAQ,UAAf,WAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqB,KAAK,WAAW0B,KAAK,OAAOC,YAAY,WAAWC,SAAUrC,KAAKI,eAC5FnB,EAAAC,EAAAC,cAAA,SAAOmD,QAAQ,YAAf,aAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqB,KAAK,aAAa0B,KAAK,OAAOC,YAAY,aAAaC,SAAUrC,KAAKI,eAChGnB,EAAAC,EAAAC,cAAA,SAAOmD,QAAQ,cAAf,eAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASqB,KAAK,WAAW0B,KAAK,OAAOC,YAAY,WAAWC,SAAUrC,KAAKI,eAC5FnB,EAAAC,EAAAC,cAAA,SAAOmD,QAAQ,YAAf,cAGRrD,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,SAAS/C,UAAU,4BAA4BsB,MAAM,qBA9EpE8B,cCwENC,qBAxEX,SAAAA,IAAc,IAAA5C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACV5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,QACKgB,MAAQ,CACT0B,MAAO,GACPC,MAAO,GACPC,iBAAkB,IAClBC,YAAa,IANPhD,mFAUM,IAAAiD,EAAA9C,KACZA,KAAKJ,MAAMiD,aACX7C,KAAKM,SAAS,CACVuC,YAAa7C,KAAKJ,MAAMiD,cAG5B7C,KAAKJ,MAAM+C,MAAMI,OAAS,GAC1B/C,KAAKM,SAAS,CACVqC,MAAO3C,KAAKJ,MAAM+C,MAAMK,UAAU,EAAG,IAAM,QAG/ChD,KAAKM,SAAS,CACVqC,MAAO3C,KAAKJ,MAAM+C,QAGtB3C,KAAKJ,MAAM+C,MAAMI,OAAS,GAC1B/C,KAAKM,SAAS,CACVsC,iBAAkB,KAGjB5C,KAAKJ,MAAM+C,MAAMI,OAAS,GAC/B/C,KAAKM,SAAS,CACVsC,iBAAkB,KAGjB5C,KAAKJ,MAAM+C,MAAMI,OAAS,IAC/B/C,KAAKM,SAAS,CACVsC,iBAAkB,KAG1BK,MAAMjD,KAAKJ,MAAM8C,OACZQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFP,EAAKxC,SAAS,CACVoC,MAAOW,EAAKA,EAAKN,OAAO,wCAK/B,IAAAO,EAAAtD,KACL,YAAyBuD,IAArBvD,KAAKgB,MAAM0B,MACH,KAER1C,KAAKJ,MAAM8C,MAAMc,SAAS,kBAClB,KAGRvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAamD,QAAS,kBAAMe,EAAK1D,MAAM6D,SAASH,EAAK1D,MAAM8C,MAAOY,EAAK1D,MAAM+C,MAAOW,EAAK1D,MAAMiD,YAAaS,EAAK1D,MAAMsB,OAAQoC,EAAK1D,MAAM8D,KAAKV,UAAU,EAAE,OACtK/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcuE,IAAK3D,KAAKgB,MAAM0B,SAEjDzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAKa,KAAKgB,MAAM2B,OAChB1D,EAAAC,EAAAC,cAAA,yBAAiBa,KAAKgB,MAAM6B,YAAYG,UAAU,EAAGhD,KAAKgB,MAAM4B,kBAAoB,OACpF3D,EAAAC,EAAAC,cAAA,oBAAYa,KAAKJ,MAAMsB,QACvBjC,EAAAC,EAAAC,cAAA,kBAAUa,KAAKJ,MAAM8D,KAAKV,UAAU,EAAG,cAlElCR,cCyEVoB,SAxEC,SAAAC,GAA+D,IAA5DC,EAA4DD,EAA5DC,QAASL,EAAmDI,EAAnDJ,SAAUM,EAAyCF,EAAzCE,QAASC,EAAgCH,EAAhCG,QAASC,EAAuBJ,EAAvBI,QAASC,EAAcL,EAAdK,QAC7D,MAAgB,SAAZJ,EACQ,KAEW,IAAnBA,EAAQf,OAEJ9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BAIR6E,GAAWD,EAEP9E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBmD,QAAS2B,GAA7C,iBACAjF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBmD,QAAS0B,GAA7C,cAEJhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAEV0E,EAAQK,IAAI,SAACC,EAAQC,GAClB,OACIpF,EAAAC,EAAAC,cAACmF,EAAD,CAAYC,IAAKH,EAAOI,KAAMf,SAAUA,EAAUf,MAAO0B,EAAOI,KAAM3B,YAAauB,EAAOf,KAAK,GAAGR,YAAaF,MAAOyB,EAAOf,KAAK,GAAGV,MAAOzB,OAAQkD,EAAOf,KAAK,GAAGnC,OAAQwC,KAAMU,EAAOf,KAAK,GAAGoB,mBAOpNT,EAEI/E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBmD,QAAS2B,GAA7C,kBAEJjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACV0E,EAAQK,IAAI,SAACC,EAAQC,GAClB,OACIpF,EAAAC,EAAAC,cAACmF,EAAD,CAAYC,IAAKH,EAAOI,KAAMf,SAAUA,EAAUf,MAAO0B,EAAOI,KAAM3B,YAAauB,EAAOf,KAAK,GAAGR,YAAaF,MAAOyB,EAAOf,KAAK,GAAGV,MAAOzB,OAAQkD,EAAOf,KAAK,GAAGnC,OAAQwC,KAAMU,EAAOf,KAAK,GAAGoB,mBAOpNV,EAEI9E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBmD,QAAS0B,GAA7C,cAEJhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACV0E,EAAQK,IAAI,SAACC,EAAQC,GAClB,OACIpF,EAAAC,EAAAC,cAACmF,EAAD,CAAYC,IAAKH,EAAOI,KAAMf,SAAUA,EAAUf,MAAO0B,EAAOI,KAAM3B,YAAauB,EAAOf,KAAK,GAAGR,YAAaF,MAAOyB,EAAOf,KAAK,GAAGV,MAAOzB,OAAQkD,EAAOf,KAAK,GAAGnC,OAAQwC,KAAMU,EAAOf,KAAK,GAAGoB,mBAQpNxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACV0E,EAAQK,IAAI,SAACC,EAAQC,GAClB,OACIpF,EAAAC,EAAAC,cAACmF,EAAD,CAAYC,IAAKH,EAAOI,KAAMf,SAAUA,EAAUf,MAAO0B,EAAOI,KAAM3B,YAAauB,EAAOf,KAAK,GAAGR,YAAaF,MAAOyB,EAAOf,KAAK,GAAGV,MAAOzB,OAAQkD,EAAOf,KAAK,GAAGnC,OAAQwC,KAAMU,EAAOf,KAAK,GAAGoB,oBC3CrMC,SAvBG,SAAAb,GAAkE,IAA/Dc,EAA+Dd,EAA/Dc,KAAMjC,EAAyDmB,EAAzDnB,MAAOC,EAAkDkB,EAAlDlB,MAAOE,EAA2CgB,EAA3ChB,YAAa3B,EAA8B2C,EAA9B3C,OAAQwC,EAAsBG,EAAtBH,KAAMkB,EAAgBf,EAAhBe,UAChE,OAAKD,EAID1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYmD,QAASqC,GAAW3F,EAAAC,EAAAC,cAAA,uBAClDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBuE,IAAKjB,EAAOH,QAAS,kBAAMsC,OAAOC,KAAKpC,EAAO,cAEpFzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAKwD,GACL1D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAA2BuE,GAC3BzE,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAH,IAA6B+B,GAC7BjC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+BACHF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,yBAAyDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,MAAzD,IAAuFyD,MAd3F,OC8LDkC,cAxLb,SAAAA,IAAc,IAAAlF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACZlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,QAsBFgF,cAAgB,WACd,IAAMC,EAAUpF,EAAKmB,MAAMkE,SAAW,EACtCrF,EAAK2B,UAAU3B,EAAKmB,MAAMC,EAAGpB,EAAKmB,MAAME,OAAQrB,EAAKmB,MAAMG,SAAUtB,EAAKmB,MAAMI,WAAYvB,EAAKmB,MAAMK,SAAU4D,IAzBrGpF,EA6BdsF,cAAgB,WACd,IAAMF,EAAUpF,EAAKmB,MAAMkE,SAAW,EACtCrF,EAAK2B,UAAU3B,EAAKmB,MAAMC,EAAGpB,EAAKmB,MAAME,OAAQrB,EAAKmB,MAAMG,SAAUtB,EAAKmB,MAAMI,WAAYvB,EAAKmB,MAAMK,SAAU4D,IA/BrGpF,EAkCd2B,UAAY,SAACP,EAAGC,EAAQC,EAAUC,EAAYC,EAAUE,GACtD,IAAIM,EAAc,IACdiC,EAAU,GAGRsB,EAAgB,KAANnE,QAAkBsC,IAANtC,EACtBoE,EAA0B,KAAXnE,QAA4BqC,IAAXrC,EAChCoE,EAA8B,KAAbnE,QAAgCoC,IAAbpC,EACpCoE,EAA6B,KAAfnE,QAAoCmC,IAAfnC,EACnCoE,EAAyB,KAAbnE,QAAgCkC,IAAblC,EAC/BoE,EAAsB,KAATlE,QAAwBgC,IAAThC,EAE9BmE,EAAU,EAETD,IACHC,EAAUnE,QAIFgC,IAANtC,QAA8BsC,IAAXrC,QAAqCqC,IAAbpC,QAAyCoC,IAAfnC,QAAyCmC,IAAblC,GACnGQ,EAAc,GACdiC,EAAU,QAEHsB,GAAUC,GAAeC,GAAiBC,GAAcC,GAC/D3D,EAAc,oBACT4D,IACH5D,GAAW,SAAAd,OAAa2E,IAE1B5B,EAAU,KAEVA,EAAU,GACLsB,IACHvD,EAAcA,EAAc,KAAOZ,EAAI,KAEpCoE,IACHxD,EAAcA,EAAc,UAAYX,EAAS,KAE9CoE,IACHzD,EAAcA,EAAc,YAAcV,EAAW,KAElDoE,IACH1D,EAAcA,EAAc,cAAgBT,EAAa,KAEtDoE,IACH3D,EAAcA,EAAc,YAAcR,EAAW,KAElDoE,IACH5D,EAAcA,EAAc,QAAUN,EAAO,MAMjD0B,MAAK,qCAAAlC,OAAsCc,IACxCqB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJ,IAAIU,GAAU,EACVC,GAAU,OACgBT,IAA1BF,EAAKsC,WAAWC,aAGkBrC,IAA7BF,EAAKsC,WAAWC,MAAM,IAC7B7B,GAAU,EACVC,GAAU,GAE2B,SAAjCX,EAAKsC,WAAWC,MAAM,GAAGC,IAC3B9B,GAAU,EACgC,SAAjCV,EAAKsC,WAAWC,MAAM,GAAGC,MAClC7B,GAAU,IAGdnE,EAAKS,SAAS,CACZwD,QAAST,EAAKsC,WAAWG,MACzB/B,QAASA,EACTC,QAASA,EACT/C,EAAGA,EACHC,OAAQA,EACRC,SAAUA,EACVC,WAAYA,EACZC,SAAUA,EACV6D,SAAUQ,MAGbK,MAAM,WACLlG,EAAKS,SAAS,CACZwD,QAASA,EACT7C,EAAGA,EACHC,OAAQA,EACRC,SAAUA,EACVC,WAAYA,EACZC,SAAUA,EACV6D,SAAUQ,OA9HJ7F,EAmIdmG,cAAgB,SAACtD,EAAOC,EAAOE,EAAa3B,EAAQwC,GAClDuC,QAAQC,IAAIxD,GACZO,MAAMP,GACHQ,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACAA,EAAK,GAAGG,SAAS,SAAWH,EAAK,GAAGG,SAAS,QAC/C3D,EAAKS,SAAS,CACZ6F,WAAY9C,EAAK,GACjB+C,WAAW,EACXC,WAAY1D,EACZ2D,iBAAkBzD,EAClB0D,YAAarF,EACbsF,UAAW9C,IAGb7D,EAAKS,SAAS,CACZ6F,WAAY9C,EAAK,GACjB+C,WAAW,EACXC,WAAY1D,EACZ2D,iBAAkBzD,EAClB0D,YAAarF,EACbsF,UAAW9C,OAxJP7D,EA8Jd+E,UAAY,WAEV/E,EAAKS,SAAS,CACZ8F,WAAW,KA/JbvG,EAAKmB,MAAQ,CACX8C,QAAS,OACTC,SAAS,EACTC,SAAS,EACTkB,SAAU,EAEVkB,WAAW,EACXD,WAAY,GACZG,iBAAkB,GAClBD,WAAY,GACZE,YAAa,GACbC,UAAW,GAEXvF,EAAG,GACHC,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZC,SAAU,IAnBAxB,wEAqKL,IAAAiD,EAAA9C,KACP,OACEf,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAQC,SAAUC,yBAChB1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyH,EAAD,CAAWjC,KAAM3E,KAAKgB,MAAMoF,UAAW1D,MAAO1C,KAAKgB,MAAMmF,WAAYxD,MAAO3C,KAAKgB,MAAMqF,WAAYxD,YAAa7C,KAAKgB,MAAMsF,iBAAkBpF,OAAQlB,KAAKgB,MAAMuF,YAAa7C,KAAM1D,KAAKgB,MAAMwF,UAAW5B,UAAW5E,KAAK4E,YACzN3F,EAAAC,EAAAC,cAAC0H,EAAD,MACA5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,UAAW7H,IACxCJ,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACG,OAAQ,SAACvH,GAAD,OAClCX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiI,EAADtH,OAAAuH,OAAA,CAAQ7F,UAAWsB,EAAKtB,WAAe5B,IACvCX,EAAAC,EAAAC,cAACmI,EAAD,CAASpD,QAASpB,EAAKkC,cAAef,QAASnB,EAAKqC,cAAerB,QAAShB,EAAK9B,MAAM8C,QAASC,QAASjB,EAAK9B,MAAM+C,QAASC,QAASlB,EAAK9B,MAAMgD,QAASP,SAAUX,EAAKkD,6BAhLrKxD,aCEE+E,QACW,cAA7B1C,OAAO1D,SAASqG,UAEe,UAA7B3C,OAAO1D,SAASqG,UAEhB3C,OAAO1D,SAASqG,SAASC,MACvB,2DCZNC,IAASP,OAAOlI,EAAAC,EAAAC,cAACwI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9E,KAAK,SAAA+E,GACjCA,EAAaC","file":"static/js/main.795f507e.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n    return (\n            <div className = \"headersplit\">\n                <div className=\"logo\">\n                    <h2><a className=\"orange\">Ram's</a> NASA Image Archive</h2>\n                </div>\n            </div>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport './Welcome.css';\n\nconst Welcome = () => {\n    return (\n        <div className=\"WelcomeContainer\">\n            <div className=\"MainWelcomeContainer\">\n                <h1> Welcome </h1>\n            </div>\n            <div className=\"InstructionContainer\">\n                <h3> How to use this website </h3>\n                <p> Enter a search term, and, optionally, enter additional refinements by clicking the \"Refine Search\" button.\n                When you are satisfied with your selections, press \"Search\" to display the results.\n                Additionally you can choose to leave all search fields blank and press \"Search\" to view all image results.</p>\n                <p>If you would like to view more information from the resulting cards, click on one to bring up an expanded view.\n                From this view, you may click on the image to open it up in a new window.\n                </p>\n                <p> You can also use query parameters in the URL, or copy and paste previous search URLs to bring up the results that you would like automatically.</p>\n                <p> Thank you for visiting! Click the \"Enter\" button below to continue. </p>\n                <div className=\"EnterButtonHolder\"><Link to=\"/search\" style={{ color: '#dd361c', fontSize: 24 }}> Enter </Link></div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Welcome;","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport './Search.css';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            q: '',\n            center: '',\n            location: '',\n            year_start: '',\n            year_end: '',\n            page: '',\n            hidden: 'hidden',\n            buttonText: 'Refine Search'\n        }\n    }\n\n    componentDidMount() {\n        const { q, center, location, start, end, page } = queryString.parse(this.props.location.search);\n        this.props.getImages(q, center, location, start, end, page);\n    }\n\n    updateSearch = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        this.props.history.push(`/search?q=${this.state.q}&center=${this.state.center}&location=${this.state.location}&start=${this.state.year_start}&end=${this.state.year_end}&page=`)\n        const { q, center, location, year_start, year_end, page } = this.state;\n        this.props.getImages(q, center, location, year_start, year_end, page);\n    }\n\n    showHide = (e) => {\n        e.preventDefault();\n        if (this.state.hidden === '') {\n            this.setState({\n                hidden: 'hidden',\n                buttonText: 'Refine Search'\n            })\n        } else {\n            this.setState({\n                hidden: '',\n                buttonText: 'Hide'\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"searchContainer\">\n                <form onSubmit={this.submitForm}>\n                    <div className=\"searchContainerInside\">\n                        <div className=\"showHideContainer\">\n                            <div className=\"searchDiv\">\n                                <input className=\"search\" type=\"text\" name=\"q\" placeholder=\"Search Term\" onChange={this.updateSearch}></input>\n                                <label htmlFor=\"q\">Search Term</label>\n                            </div>\n                            <button className=\"searchButton showHideButton\" onClick={this.showHide}>{this.state.buttonText}</button>\n                        </div>\n                        <div className={\"additionalsearchparams \" + this.state.hidden}>\n                            <div className=\"searchDiv\">\n                                <input className=\"search\" name=\"center\" type=\"text\" placeholder=\"Center\" onChange={this.updateSearch}></input>\n                                <label htmlFor=\"center\">Center</label>\n                            </div>\n                            <div className=\"searchDiv\">\n                                <input className=\"search\" name=\"location\" type=\"text\" placeholder=\"Location\" onChange={this.updateSearch}></input>\n                                <label htmlFor=\"location\">Location</label>\n                            </div>\n                            <div className=\"searchDiv\">\n                                <input className=\"search\" name=\"year_start\" type=\"text\" placeholder=\"Start Year\" onChange={this.updateSearch}></input>\n                                <label htmlFor=\"year_start\">Start Year</label>\n                            </div>\n                            <div className=\"searchDiv\">\n                                <input className=\"search\" name=\"year_end\" type=\"text\" placeholder=\"End Year\" onChange={this.updateSearch}></input>\n                                <label htmlFor=\"year_end\">End Year</label>\n                            </div>\n                        </div>\n                        <input type=\"submit\" className=\"searchButton submitButton\" value=\"Search\" />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport './ResultCard.css';\n\nclass ResultCard extends Component {\n    constructor() {\n        super()\n        this.state = {\n            image: '',\n            title: '',\n            descriptionChars: 125,\n            description: ''\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.description) {\n            this.setState({\n                description: this.props.description\n            });\n        }\n        if (this.props.title.length > 37) {\n            this.setState({\n                title: this.props.title.substring(0, 37) + '...'\n            });\n        } else {\n            this.setState({\n                title: this.props.title\n            });\n        }\n        if (this.props.title.length > 35) {\n            this.setState({\n                descriptionChars: 10\n            });\n        } \n        else if (this.props.title.length > 26) {\n            this.setState({\n                descriptionChars: 25\n            });\n        }\n        else if (this.props.title.length > 13) {\n            this.setState({\n                descriptionChars: 75\n            });\n        }\n        fetch(this.props.image)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    image: data[data.length-2]\n                })\n            });\n    }\n\n    render() {\n        if (this.state.image === undefined) {\n            return (null);\n        }\n        if (this.props.image.includes(\"nasa.gov/video\")){\n            return (null);\n        }\n        return (\n            <div className=\"resultCard\" onClick={() => this.props.showInfo(this.props.image, this.props.title, this.props.description, this.props.center, this.props.date.substring(0,10))} >\n                <div className=\"imageHalf\">\n                    <img className=\"imageResult\" src={this.state.image} />\n                </div>\n                <div className=\"detailHalf\">\n                    <h2>{this.state.title}</h2>\n                    <p>Description: {this.state.description.substring(0, this.state.descriptionChars) + '...'}</p>\n                    <p>Center: {this.props.center}</p>\n                    <p>Date: {this.props.date.substring(0, 10)}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ResultCard;\n","import React from 'react';\nimport ResultCard from '../ResultCard/ResultCard';\nimport './Results.css';\n\nconst Results = ({ results, showInfo, hasNext, hasPrev, getNext, getPrev }) => {\n    if (results === 'none') {\n        return (null);\n    }\n    if (results.length === 0) {\n        return (\n            <div>\n                <p>No results found.</p>\n            </div>\n        );\n    }\n    if (hasPrev && hasNext) {\n        return (\n            <div>\n                <div className=\"buttonsContainer\">\n                    <button className=\"directionButton\" onClick={getPrev}>Previous Page</button>\n                    <button className=\"directionButton\" onClick={getNext}>Next Page</button>\n                </div>\n                <div className=\"resultsContainer\">\n\n                    {results.map((result, i) => {\n                        return (\n                            <ResultCard key={result.href} showInfo={showInfo} image={result.href} description={result.data[0].description} title={result.data[0].title} center={result.data[0].center} date={result.data[0].date_created} />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n    if (hasPrev) {\n        return (\n            <div>\n                <div className=\"buttonsContainer\">\n                    <button className=\"directionButton\" onClick={getPrev}>Previous Page</button>\n                </div>\n                <div className=\"resultsContainer\">\n                    {results.map((result, i) => {\n                        return (\n                            <ResultCard key={result.href} showInfo={showInfo} image={result.href} description={result.data[0].description} title={result.data[0].title} center={result.data[0].center} date={result.data[0].date_created} />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n    if (hasNext) {\n        return (\n            <div>\n                <div className=\"buttonsContainer\">\n                    <button className=\"directionButton\" onClick={getNext}>Next Page</button>\n                </div>\n                <div className=\"resultsContainer\">\n                    {results.map((result, i) => {\n                        return (\n                            <ResultCard key={result.href} showInfo={showInfo} image={result.href} description={result.data[0].description} title={result.data[0].title} center={result.data[0].center} date={result.data[0].date_created} />\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className=\"resultsContainer\">\n            {results.map((result, i) => {\n                return (\n                    <ResultCard key={result.href} showInfo={showInfo} image={result.href} description={result.data[0].description} title={result.data[0].title} center={result.data[0].center} date={result.data[0].date_created} />\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Results;","import React from 'react';\nimport './CardModal.css';\n\nconst CardModal = ({ show, image, title, description, center, date, exitModal }) => {\n    if (!show) {\n        return (null);\n    }\n    return (\n        <div className=\"dimBackground\">\n            <div className=\"modalContainer\">\n                <button className=\"exitModal\" onClick={exitModal}><strong>Back</strong></button>\n                <div className=\"modalImageHalf\">\n                    <img className=\"modalImageResult\" src={image} onClick={() => window.open(image, '_blank')}/>\n                </div>\n                <div className=\"modalDetailHalf\">\n                    <h2>{title}</h2>\n                    <p><strong>Date:</strong> {date}</p>\n                    <p><strong>Center:</strong> {center}</p>\n                    <p><strong>Description:</strong></p>\n                    <p className=\"alignLeft\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a className=\"orange\">> </a> {description}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CardModal;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Welcome from './components/Welcome/Welcome';\nimport Search from './components/Search/Search';\nimport Results from './components/Results/Results';\nimport CardModal from './components/CardModal/CardModal';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: 'none',          /////\n      hasNext: false,              /////// Results becomes an array containing the returned items from the fetch API call, and currPage keeps track of which page of the results I'm on.\n      hasPrev: false,              //\n      currPage: 1,              /////\n\n      showModal: false,          /////\n      modalImage: '',               //\n      modalDescription: '',         /////// All of these are for information relevant to the modal/expanded view that is displayed when a card is clicked.\n      modalTitle: '',               //\n      modalCenter: '',              //\n      modalDate: '',             /////\n\n      q: '',                      /////\n      center: '',                    //\n      location: '',                  /////// These items keep track of the entered search queries so that clicking on the next page and previous page buttons can use the same queries.\n      year_start: '',                //\n      year_end: ''                /////\n    }\n  }\n\n  getPrevImages = () => {\n    const newPage = this.state.currPage - 1;\n    this.getImages(this.state.q, this.state.center, this.state.location, this.state.year_start, this.state.year_end, newPage);\n\n  }\n\n  getNextImages = () => {\n    const newPage = this.state.currPage + 1;\n    this.getImages(this.state.q, this.state.center, this.state.location, this.state.year_start, this.state.year_end, newPage);\n  }\n\n  getImages = (q, center, location, year_start, year_end, page) => {\n    let queryString = '?';\n    let results = [];\n\n    //\"check\" variables below check to see if the query parameters passed to this method are either empty or undefined.\n    const checkq = (q === '' || q === undefined);\n    const checkcenter = (center === '' || center === undefined);\n    const checklocation = (location === '' || location === undefined);\n    const checkstart = (year_start === '' || year_start === undefined);\n    const checkend = (year_end === '' || year_end === undefined);\n    const checkpage = (page === '' || page === undefined);\n\n    let getpage = 1;\n    //if the passed page value is neither null nor undefined, then set the correct page.\n    if (!checkpage) {\n      getpage = page;\n    }\n\n    //if everything is undefined then that means that the user has just entered the search page. Therefore, set results to 'none' instead of an empty array so that no error is displayed by the Results component\n    if (q === undefined && center === undefined && location === undefined && year_start === undefined && year_end === undefined) {\n      queryString = '';\n      results = 'none';\n    }\n    else if (checkq && checkcenter && checklocation && checkstart && checkend) {\n      queryString = '?media_type=image';\n      if (!checkpage) {\n        queryString += `&page=${getpage}`;\n      }\n      results = [];\n    } else {\n      results = [];\n      if (!checkq) {\n        queryString = queryString + \"q=\" + q + \"&\";\n      }\n      if (!checkcenter) {\n        queryString = queryString + \"center=\" + center + \"&\";\n      }\n      if (!checklocation) {\n        queryString = queryString + \"location=\" + location + \"&\";\n      }\n      if (!checkstart) {\n        queryString = queryString + \"year_start=\" + year_start + \"&\";\n      }\n      if (!checkend) {\n        queryString = queryString + \"year_end=\" + year_end + \"&\";\n      }\n      if (!checkpage) {\n        queryString = queryString + \"page=\" + page + \"&\";\n      }\n    }\n\n    //completed building the appropriate query string above, and will be used below in the fetch URL.\n\n    fetch(`https://images-api.nasa.gov/search${queryString}`)\n      .then(response => response.json())\n      .then(data => {\n        //console.log(data.collection);\n        let hasNext = false;\n        let hasPrev = false;\n        if (data.collection.links === undefined) {\n\n        }\n        else if (data.collection.links[1] !== undefined) {\n          hasNext = true;\n          hasPrev = true;\n        } else {\n          if (data.collection.links[0].rel === \"next\") {\n            hasNext = true;\n          } else if (data.collection.links[0].rel === \"prev\") {\n            hasPrev = true;\n          }\n        }\n        this.setState({\n          results: data.collection.items,\n          hasNext: hasNext,\n          hasPrev: hasPrev,\n          q: q,\n          center: center,\n          location: location,\n          year_start: year_start,\n          year_end: year_end,\n          currPage: getpage\n        })\n      })\n      .catch(() => {\n        this.setState({\n          results: results,\n          q: q,\n          center: center,\n          location: location,\n          year_start: year_start,\n          year_end: year_end,\n          currPage: getpage\n        });\n      });\n  }\n\n  showCardModal = (image, title, description, center, date) => {\n    console.log(image);\n    fetch(image)\n      .then(response => response.json())\n      .then(data => {\n        if (data[0].includes('.jpg') || data[0].includes('jpeg')) {\n          this.setState({\n            modalImage: data[0],\n            showModal: true,\n            modalTitle: title,\n            modalDescription: description,\n            modalCenter: center,\n            modalDate: date\n          });\n        } else {\n          this.setState({\n            modalImage: data[1],\n            showModal: true,\n            modalTitle: title,\n            modalDescription: description,\n            modalCenter: center,\n            modalDate: date\n          });\n        }\n      })\n  }\n\n  exitModal = () => {\n    //console.log('exit');\n    this.setState({\n      showModal: false\n    });\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <CardModal show={this.state.showModal} image={this.state.modalImage} title={this.state.modalTitle} description={this.state.modalDescription} center={this.state.modalCenter} date={this.state.modalDate} exitModal={this.exitModal} />\n          <Header />\n          <Route path=\"/\" exact strict component={Welcome} />\n          <Route path=\"/search\" exact render={(props) => (\n            <div>\n              <Search getImages={this.getImages} {...props} />\n              <Results getPrev={this.getPrevImages} getNext={this.getNextImages} results={this.state.results} hasNext={this.state.hasNext} hasPrev={this.state.hasPrev} showInfo={this.showCardModal} />\n            </div>\n          )} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}